- Exécutez une commande simple avec un chemin absolu comme /bin/ls ou toute autre commande sans options
- Combien de variables globales ? Pourquoi? Donnez un exemple concret de la raison pour laquelle cela vous semble obligatoire ou logique.
- Tester une commande vide.
- Testez uniquement les espaces ou les tabulations.
- Exécuter une commande simple avec un chemin absolu comme /bin/ls ou toute autre commande avec arguments mais sans guillemets ni guillemets doubles
- Répétez plusieurs fois avec différentes commandes et arguments
écho
- Exécute la commande echo avec ou sans arguments ou -n
- Répéter plusieurs fois avec des arguments différents
sortir
- Exécuter la commande exit avec ou sans arguments
- Répéter plusieurs fois avec des arguments différents
- N'oubliez pas de relancer le minishell
Valeur de retour d'un processus
- Exécutez une commande simple avec un chemin absolu comme /bin/ls ou toute autre commande avec arguments mais sans guillemets ni guillemets doubles puis exécutez echo $?
- Vérifiez la valeur imprimée. Vous pouvez répéter la même chose dans bash et la comparer.
- Répétez plusieurs fois avec différentes commandes et arguments, utilisez certaines commandes défaillantes comme '/bin/ls filethatdoesntexist'
- quelque chose comme expr $ ? + $ ?
Signaux
- Essayez ctrl-C dans une invite vide devrait afficher une nouvelle ligne avec une nouvelle invite
- Essayez ctrl-\ dans une invite vide ne devrait rien faire
- Essayez ctrl-D dans une invite vide pour quitter le minishell --> RELANCEZ !
- Essayez ctrl-C dans une invite après avoir écrit quelque chose devrait afficher une nouvelle ligne avec une nouvelle invite
- Le tampon doit également être propre, appuyez sur "Entrée" pour vous assurer que rien de l'ancienne ligne n'est exécuté.
- Essayez ctrl-D dans une invite après avoir écrit quelque chose ne devrait rien faire
- Essayez ctrl-\ dans une invite après avoir écrit quelque chose ne devrait rien faire !
- Essayez ctrl-C après avoir exécuté une commande bloquante comme cat sans arguments ou grep "quelque chose"
- Essayez ctrl-\ après avoir exécuté une commande bloquante comme cat sans arguments ou grep "quelque chose"
- Essayez ctrl-D après avoir exécuté une commande bloquante comme chat sans arguments ou grep "quelque chose"
- Répétez plusieurs fois avec différentes commandes
Double citation
- Exécutez une commande simple avec des arguments mais cette fois des guillemets doubles (vous devez inclure des espaces blancs)
- une commande du type : echo "cat lol.c | cat > lol.c"
- n'importe quoi sauf $.
Guillemets simples
- Exécuter des commandes avec des guillemets simples comme argument
- Essayez des arguments vides
- Essayez les variables d'environnement, les espaces blancs, les tuyaux, la redirection dans les guillemets simples
- echo '$USER' doit imprimer $USER
- Rien ne doit être interprété
env
- Vérifiez si env vous montre les variables d'environnement actuelles
exportation
- Exporter des variables d'environnement, en créer de nouvelles et remplacer les anciennes
- Vérifiez-les avec env
non défini
- Exporter des variables d'environnement, en créer de nouvelles et remplacer les anciennes
- Utilisez unset pour en supprimer certains
- Vérifier le résultat avec env
CD
- Utilisez la commande cd pour déplacer le répertoire de travail et vérifiez si vous êtes dans le bon répertoire avec /bin/ls
- Répétez plusieurs fois avec le CD qui fonctionne et ne fonctionne pas
- essayer '.' '..' comme arguments aussi
pwd
- Utilisez la commande pwd
- Répétez plusieurs fois dans plusieurs répertoires
Chemin relatif
- Exécuter des commandes mais cette fois utiliser un chemin relatif
- Répétez plusieurs fois dans plusieurs répertoires avec un chemin relatif complexe (beaucoup de ..)
Chemin de l'environnement
- Exécuter des commandes mais cette fois sans aucun chemin. (ls, wc, awk etc...)
- Désactivez le $PATH et vérifiez s'il ne fonctionne plus
- Définissez $PATH sur une valeur de répertoire multiple (répertoire1:répertoire2) et vérifiez que les répertoires sont vérifiés dans l'ordre de gauche à droite
Redirection
- Exécuter des commandes avec des redirections < et/ou >
- Répétez plusieurs fois avec différentes commandes et arguments et changez parfois > avec >>
- Vérifiez si plusieurs des mêmes redirections échouent
- Testez << la redirection (il n'est pas nécessaire de mettre à jour l'historique).
Tuyaux
- Exécutez des commandes avec des tubes comme 'cat file | grep bla | Suite'
- Répétez plusieurs fois avec différentes commandes et arguments
- Essayez quelques commandes qui échouent comme 'ls filethatdoesntexist | grep bla | Suite'
- Essayez de mélanger les pipes et les redirections.
Go Crazy et histoire
- tapez une ligne de commande